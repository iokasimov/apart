name:                apart
version:             0.1.1
synopsis:            Get all your structure and rip it apart.
homepage:            https://github.com/iokasimov/apart
license:             BSD3
license-file:        LICENSE
author:              Murat Kasimov
maintainer:          Murat Kasimov <iokasimov.m@gmail.com>
copyright:           Copyright (c) 2018 Murat Kasimov
category:            Data, Control
build-type:          Simple
cabal-version:       >= 1.10

description:         The main idea: if you can describe your data structure via Cofree, with apart you can serialize, persistent or hash a segment of your structure!

source-repository head
  type: git
  location: https://github.com/iokasimov/apart.git

library
  exposed-modules:
    Data.Apart,
    Data.Apart.Structures.Graph,
    Data.Apart.Structures.Stack,
    Data.Apart.Structures.Stream,
    Data.Apart.Structures.Tree.T23,
    Data.Apart.Structures.Tree.T234,
    Data.Apart.Structures.Tree.Rose,
    Data.Apart.Structures.Tree.Prefix,
    Data.Apart.Structures.Tree.Binary,
    Data.Apart.Structures.Tree.Binary.Rotation,
    Data.Apart.Structures.Tree.Binary.AVL,
    Data.Apart.Structures.Tree.Binary.Splay,
    Data.Apart.Structures.Tree.Binary.Redblack,
    Data.Apart.Machinery.Moore,
    Data.Apart.Usage.Blockchain,
    Data.Apart.Usage.LRU
  other-modules:
    Data.Apart.Apart,
    Data.Apart.Shape,
    Data.Apart.Combinators
  build-depends:
    base == 4.*
    , free
    , comonad
    , lens
    , contravariant
    , hedgehog
    , semigroupoids
  default-language: Haskell2010
  ghc-options: -fno-warn-tabs
  default-extensions:
    ExistentialQuantification,
    LambdaCase
    TypeApplications,
    DataKinds,
    KindSignatures,
    RankNTypes,
    TypeInType,
    TypeFamilies,
    TypeOperators,
    ViewPatterns,
    PatternSynonyms,
    TupleSections

executable example
  main-is: Example/Main.hs
  build-depends:
    base == 4.*
    , free
    , comonad
    , lens
    , contravariant
    , hedgehog
    , semigroupoids
    , apart
  default-language: Haskell2010
  ghc-options: -fno-warn-tabs
  default-extensions:
    ExistentialQuantification,
    TypeApplications,
    DataKinds,
    KindSignatures,
    RankNTypes,
    TypeInType,
    TypeFamilies,
    TypeOperators,
    ViewPatterns,
    PatternSynonyms,
    TupleSections

test-suite test
  type: exitcode-stdio-1.0
  main-is: Test/Apart.hs
  build-depends:
    base == 4.*
    , free
    , comonad
    , lens
    , contravariant
    , hedgehog
    , semigroupoids
    , apart
  default-language: Haskell2010
  default-extensions:
    OverloadedStrings,
    ExistentialQuantification,
    LambdaCase
    TypeApplications,
    DataKinds,
    KindSignatures,
    RankNTypes,
    TypeInType,
    TypeFamilies,
    TypeOperators,
    ViewPatterns,
    PatternSynonyms,
    TupleSections
  ghc-options: -fno-warn-tabs
